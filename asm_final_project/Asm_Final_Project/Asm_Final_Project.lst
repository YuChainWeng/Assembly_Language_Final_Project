Microsoft (R) Macro Assembler Version 14.42.34435.0	    12/15/24 16:12:48
main.asm						     Page 1 - 1


				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				
				
				
 00000000			.data
 00000000  0000002A [		    floor     BYTE 42 DUP(0C4h)
	    C4
	   ]
 0000002A C4			    floorFix  BYTE 0C4h
 = 00000003			    BoxWidth  = 3
 = 00000003			    BoxHeight = 3
 0000002B DA			    boxTop    BYTE 0DAh, (BoxWidth - 2) DUP(0C4h), 0BFh
	   00000001 [
	    C4
	   ] BF
 0000002E B3			    boxBody   BYTE 0B3h, (BoxWidth - 2) DUP(' '), 0B3h
	   00000001 [
	    20
	   ] B3
 00000031 C0			    boxBottom BYTE 0C0h, (BoxWidth - 2) DUP(0C4h), 0D9h
	   00000001 [
	    C4
	   ] D9
 00000034 7C 00			    cactus     BYTE '|',0
 00000036 0027 000C		    cactus_pos COORD <39, 12>
 0000003A 00000001		    cactus_speed DWORD 1 ; 仙人掌的速度
 0000003E 00000000		    outputHandle DWORD 0
 00000042 00000000		    bytesWritten DWORD 0
 00000046 00000000		    count DWORD 0
 0000004A 0005 0000		    highscore_pos COORD <5,0>
 0000004E 0019 0000		    score_pos COORD <25,0>
 00000052 0000 000C		    floor_pos COORD <0,12>
 00000056 0003 000A		    xyPosition COORD <3,10> ; 起始位置
 0000005A 0050 0019		    xyBound COORD <80,25> ; 螢幕邊界
 0000005E 00000000		    cellsWritten DWORD ?
 00000062  0000002A [		    attributes_floor WORD 42 DUP(0Fh)
	    000F
	   ]
				    ;attributes0 WORD BoxWidth DUP(0Ch)
 000000B6  00000003 [		    attributes0 WORD BoxWidth DUP(0Ah)
	    000A
	   ]
 000000BC  00000003 [		    attributes1 WORD BoxWidth DUP(0Ah)
	    000A
	   ]
 000000C2  00000003 [		    attributes2 WORD BoxWidth DUP(0Ah)
	    000A
	   ]
				    ;attributes1 WORD (BoxWidth-1) DUP(0Eh),0Ah
				    ;attributes2 WORD BoxWidth DUP(0Bh)
 000000C8 0000			    velocity WORD 0  ; 速度，控制跳躍上升和下降
 000000CA 0001			    gravity WORD 1   ; 重力，會讓速度每次減少 1
 000000CC 00000000		    keyState DWORD 0
				
 000000D0 00000000		    score DWORD 0
 000000D4 00000000		    highscore DWORD 0
 000000D8 53 63 6F 72 65	    scoreString BYTE "Score: 000000", 0
	   3A 20 30 30 30
	   30 30 30 00
 000000E6 48 69 67 68 20	    highscoreString BYTE "High Score: 000000", 0
	   53 63 6F 72 65
	   3A 20 30 30 30
	   30 30 30 00
 000000F9 47 61 6D 65 20	    gameOverMessage BYTE "Game Over!", 0
	   4F 76 65 72 21
	   00
				
 = start@0			main EQU start@0
				
 00000000			.code
				    SetConsoleOutputCP PROTO STDCALL :DWORD
				    GetAsyncKeyState PROTO STDCALL :DWORD
				    Sleep PROTO STDCALL :DWORD  ; 延遲函數
				
 00000000			main PROC
				    INVOKE SetConsoleOutputCP, 437
				
				    ; 取得控制台的輸出控制
				    INVOKE GetStdHandle, STD_OUTPUT_HANDLE
 00000011  A3 0000003E R	    mov outputHandle, eax
				
				    ; 畫出初始的方塊
 00000016  E8 0000023A		    call DrawBox
				
				    ; 主迴圈
 0000001B			mainLoop:
				    ; 加入延遲，避免移動速度過快
				    INVOKE Sleep, 75  ; 延遲 100 毫秒
 00000022  E8 0000041C		    call MoveCactus
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes1, 1, cactus_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR cactus, 1, cactus_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes_floor, 1, floor_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR floorFix, 1, floor_pos, ADDR cellsWritten
 0000009B  66| FF 05		    inc cactus_pos.x
	   00000036 R
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes_floor, 1, cactus_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR floorFix, 1, cactus_pos, ADDR cellsWritten
				    
 000000DC  66| FF 0D		    dec cactus_pos.x
	   00000036 R
 000000E3  FF 05 000000D0 R	    inc score
 000000E9  E8 000002B4		    call FormatScore
 000000EE  E8 000002DA		    call DrawScore
 000000F3  E8 00000310		    call DrawHighScore
 000000F8  E8 00000008		    call CheckJumpKey
				
				    ; 檢查是否碰撞到仙人掌
				    ;call CheckCollision
				    ; 如果碰撞，顯示遊戲結束訊息並結束程式
 000000FD  83 F8 01		    cmp eax, 1
				    ;call GameOver ; 如果碰撞，則跳到 GameOver
				
				    ; 如果沒有檢測到任何按鍵，則重新回到主迴圈
 00000100  E9 FFFFFF16		    jmp mainLoop
				
				
				; **檢測上鍵和空白鍵的跳躍**
 00000105			CheckJumpKey PROC
				    ; 檢測上鍵 (VK_UP)
				    INVOKE GetAsyncKeyState, VK_UP
 0000010C  A9 00008000		    test eax, 8000h
 00000111  75 0F		    jnz DoJump  ; 如果按下上鍵，執行跳躍
				
				    ; 檢測空白鍵 (VK_SPACE)
				    INVOKE GetAsyncKeyState, VK_SPACE
 0000011A  A9 00008000		    test eax, 8000h
 0000011F  75 01		    jnz DoJump  ; 如果按下空白鍵，執行跳躍
 00000121  C3			    ret
				
 00000122			DoJump:
 00000122  E8 00000006		    call Jump
 00000127  E8 00000268		    call WaitForRelease ; 等待按鍵釋放，避免重複跳躍
 0000012C  C3			    ret
 0000012D			CheckJumpKey ENDP
				
				; **跳躍的動作 (獨立出一個子程式)**
				; **跳躍的動作，加入重力效果**
 0000012D			Jump PROC
				    ; 設定初始速度 (例如速度 5 可以測試跳得多高)
 0000012D  66| C7 05		    mov velocity, 6
	   000000C8 R
	   0006
 00000136  66| C7 05		    mov gravity, 2  ; 重力，每次更新速度時會減少
	   000000CA R
	   0002
				
 0000013F			JumpLoop:
				    ; 更新 Y 座標，模擬向上和向下運動
 0000013F  66| A1		    mov ax, velocity
	   000000C8 R
 00000145  66| 29 05		    sub xyPosition.y, ax  ; y = y - velocity
	   00000058 R
				    
				    ; 清除並重繪恐龍 (更新恐龍的畫面)
 0000014C  E8 00000000 E	    call Clrscr
 00000151  E8 000000FF		    call DrawBox
 00000156  E8 00000272		    call DrawScore
 0000015B  E8 000002A8		    call DrawHighScore
				    ;繼續增加score
 00000160  FF 05 000000D0 R	    inc score
 00000166  E8 00000237		    call FormatScore
				    
				    ; 模擬重力效果，速度會逐漸減少
 0000016B  66| A1		    mov ax, velocity      ; Load velocity into AX
	   000000C8 R
 00000171  66| 2B 05		    sub ax, gravity       ; Add gravity to velocity
	   000000CA R
 00000178  66| A3		    mov velocity, ax      ; Store updated velocity back to memory
	   000000C8 R
				    
				    ; 檢查恐龍是否已經回到地面
 0000017E  66| 83 3D		    cmp xyPosition.y, 10  ; 假設地面 y 座標為 10
	   00000058 R 0A
 00000186  7D 09		    jge EndJump           ; 如果 y >= 10，則結束跳躍
				    
				    ; 延遲，讓動作不會太快
				    INVOKE Sleep, 100
 0000018F  EB AE		    jmp JumpLoop  ; 繼續下一幀
				
 00000191			EndJump:
				    ; 確保恐龍回到地面
 00000191  66| C7 05		    mov xyPosition.y, 10
	   00000058 R
	   000A
 0000019A  E8 00000000 E	    call Clrscr
 0000019F  E8 000000B1		    call DrawBox
 000001A4  E8 00000224		    call DrawScore
 000001A9  E8 0000025A		    call DrawHighScore
 000001AE  C3			    ret
 000001AF			Jump ENDP
				
				; **檢查是否碰撞到仙人掌**
 000001AF			CheckCollision PROC
				    ; 檢查恐龍是否與仙人掌碰撞
 000001AF  66| A1		    mov ax, xyPosition.x
	   00000056 R
 000001B5  66| 8B 1D		    mov bx, cactus_pos.x
	   00000036 R
 000001BC  66| 3B C3		    cmp ax, bx
				    
 000001BF  7C 43		    jl NoCollision  ; 如果恐龍的 x 小於仙人掌的 x，則沒有碰撞
				
 000001C1  66| A1		    mov ax, xyPosition.x
	   00000056 R
 000001C7  66| 83 C0 03		    add ax, BoxWidth
 000001CB  66| 8B 1D		    mov bx, cactus_pos.x
	   00000036 R
 000001D2  66| 3B C3		    cmp ax, bx
 000001D5  7F 2D		    jg NoCollision  ; 如果恐龍的右邊界大於仙人掌的 x，則沒有碰撞
				
 000001D7  66| A1		    mov ax, xyPosition.y
	   00000058 R
 000001DD  66| 8B 1D		    mov bx, cactus_pos.y
	   00000038 R
 000001E4  66| 3B C3		    cmp ax, bx
 000001E7  7C 1B		    jl NoCollision  ; 如果恐龍的 y 小於仙人掌的 y，則沒有碰撞
				
 000001E9  66| A1		    mov ax, xyPosition.y
	   00000058 R
 000001EF  66| 83 C0 03		    add ax, BoxHeight
 000001F3  66| 8B 1D		    mov bx, cactus_pos.y
	   00000038 R
 000001FA  66| 3B C3		    cmp ax, bx
 000001FD  7F 05		    jg NoCollision  ; 如果恐龍的下邊界大於仙人掌的 y，則沒有碰撞
				
				    ; 如果沒有跳過這些檢查，則發生碰撞
 000001FF  B8 00000001		    mov eax, 1
				
 00000204			NoCollision:
 00000204  B8 00000000		    mov eax, 0
 00000209  C3			    ret
 0000020A			CheckCollision ENDP
				
				
				; **遊戲結束**
 0000020A			GameOver PROC
				    ; 顯示 "Game Over!" 訊息
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes_floor, 40, score_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR gameOverMessage, 10, score_pos, ADDR cellsWritten
				    INVOKE Sleep, 5000  ; 等待 2 秒鐘後結束遊戲
				    INVOKE ExitProcess, 0
 00000255			GameOver ENDP
				
				; 繪製方塊
 00000255			DrawBox PROC
				    ; 清除螢幕
 00000255  E8 000001E9		    call MoveCactus
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes_floor, 42, floor_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR floor, 42, floor_pos, ADDR cellsWritten
				    ; 上邊框
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes0, BoxWidth, xyPosition, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR boxTop, BoxWidth, xyPosition, ADDR cellsWritten
				
 000002CE  66| FF 05		    inc xyPosition.y    ; 移動到下一行
	   00000058 R
				
				    ; 中間的內容
 000002D5  B9 00000001		    mov ecx, BoxHeight - 2
 000002DA			L1: 
 000002DA  51			    push ecx
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes1, BoxWidth, xyPosition, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR boxBody, BoxWidth, xyPosition, ADDR cellsWritten
 00000315  66| FF 05		    inc xyPosition.y
	   00000058 R
 0000031C  59			    pop ecx
 0000031D  E2 BB		    loop L1
				
				    ; 下邊框
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes2, BoxWidth, xyPosition, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR boxBottom, BoxWidth, xyPosition, ADDR cellsWritten
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes1, 1, cactus_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR cactus, 1, cactus_pos, ADDR cellsWritten
 00000393  C3			    ret
 00000394			DrawBox ENDP
				
				; 等待按鍵釋放
 00000394			WaitForRelease PROC
				    ; ecx = 虛擬鍵的代碼
 00000394			WaitLoop:
				    INVOKE GetAsyncKeyState, ecx
 0000039A  A9 00008000		    test eax, 8000h
 0000039F  75 F3		    jnz WaitLoop ; 如果還在按著按鍵，繼續等待
 000003A1  C3			    ret
 000003A2			WaitForRelease ENDP
				
 000003A2			FormatScore PROC
 000003A2  A1 000000D0 R	    mov eax, score
 000003A7  B9 0000000A		    mov ecx, 10
 000003AC  BF 000000E3 R	    mov edi, OFFSET scoreString + 11
 000003B1  C6 07 00		    mov BYTE PTR [edi], 0
 000003B4  BF 000000E3 R	    mov edi, OFFSET scoreString + 11
 000003B9  BA 00000000		    mov edx, 0
 000003BE			    L1:
 000003BE  33 D2		    xor edx, edx
 000003C0  F7 F1		        div ecx
 000003C2  80 C2 30		        add dl, '0'
 000003C5  4F			        dec edi
 000003C6  88 17		        mov BYTE PTR [edi], dl
 000003C8  85 C0		        test eax, eax
 000003CA  75 F2		        jnz L1
 000003CC  C3			    ret
 000003CD			FormatScore ENDP
				
 000003CD			DrawScore PROC
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes_floor, 40, score_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR scoreString, 12, score_pos, ADDR cellsWritten
 00000407  C3			    ret
 00000408			DrawScore ENDP
				
 00000408			DrawHighScore PROC
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes_floor, 40, highscore_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR highscoreString, 18, highscore_pos, ADDR cellsWritten
 00000442  C3			    ret
 00000443			DrawHighScore ENDP
				
 00000443			MoveCactus PROC
				    ; 移動仙人掌
 00000443  66| FF 0D		    dec cactus_pos.x
	   00000036 R
				    ; 如果仙人掌越過螢幕邊界，則重新生成
 0000044A  66| 83 3D		    cmp cactus_pos.x, 0
	   00000036 R 00
				
 00000452  7C 01		    jl resetCactus
 00000454  C3			    ret
				
 00000455			resetCactus:
				    
 00000455  66| C7 05		    mov cactus_pos.x, 39 ; 重新生成仙人掌
	   00000036 R
	   0027
 0000045E  C3			    ret
 0000045F			MoveCactus ENDP
				
 0000045F			main ENDP
				END main
Microsoft (R) Macro Assembler Version 14.42.34435.0	    12/15/24 16:12:48
main.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000104 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000045F Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CheckCollision . . . . . . . . .	P Near	 000001AF _TEXT	Length= 0000005B Public STDCALL
  NoCollision  . . . . . . . . .	L Near	 00000204 _TEXT	
CheckJumpKey . . . . . . . . . .	P Near	 00000105 _TEXT	Length= 00000028 Public STDCALL
  DoJump . . . . . . . . . . . .	L Near	 00000122 _TEXT	
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DrawBox  . . . . . . . . . . . .	P Near	 00000255 _TEXT	Length= 0000013F Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 000002DA _TEXT	
DrawHighScore  . . . . . . . . .	P Near	 00000408 _TEXT	Length= 0000003B Public STDCALL
DrawScore  . . . . . . . . . . .	P Near	 000003CD _TEXT	Length= 0000003B Public STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatScore  . . . . . . . . . .	P Near	 000003A2 _TEXT	Length= 0000002B Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 000003BE _TEXT	
GameOver . . . . . . . . . . . .	P Near	 0000020A _TEXT	Length= 0000004B Public STDCALL
GetAsyncKeyState . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Jump . . . . . . . . . . . . . .	P Near	 0000012D _TEXT	Length= 00000082 Public STDCALL
  JumpLoop . . . . . . . . . . .	L Near	 0000013F _TEXT	
  EndJump  . . . . . . . . . . .	L Near	 00000191 _TEXT	
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MoveCactus . . . . . . . . . . .	P Near	 00000443 _TEXT	Length= 0000001C Public STDCALL
  resetCactus  . . . . . . . . .	L Near	 00000455 _TEXT	
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleOutputCP . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitForRelease . . . . . . . . .	P Near	 00000394 _TEXT	Length= 0000000E Public STDCALL
  WaitLoop . . . . . . . . . . .	L Near	 00000394 _TEXT	
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
start@0  . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000045F Public STDCALL
  mainLoop . . . . . . . . . . .	L Near	 0000001B _TEXT	
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
BoxHeight  . . . . . . . . . . .	Number	 00000003h   
BoxWidth . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
attributes0  . . . . . . . . . .	Word	 000000B6 _DATA	
attributes1  . . . . . . . . . .	Word	 000000BC _DATA	
attributes2  . . . . . . . . . .	Word	 000000C2 _DATA	
attributes_floor . . . . . . . .	Word	 00000062 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
boxBody  . . . . . . . . . . . .	Byte	 0000002E _DATA	
boxBottom  . . . . . . . . . . .	Byte	 00000031 _DATA	
boxTop . . . . . . . . . . . . .	Byte	 0000002B _DATA	
brown  . . . . . . . . . . . . .	Number	 00000006h   
bytesWritten . . . . . . . . . .	DWord	 00000042 _DATA	
cactus_pos . . . . . . . . . . .	COORD	 00000036 _DATA	
cactus_speed . . . . . . . . . .	DWord	 0000003A _DATA	
cactus . . . . . . . . . . . . .	Byte	 00000034 _DATA	
cellsWritten . . . . . . . . . .	DWord	 0000005E _DATA	
count  . . . . . . . . . . . . .	DWord	 00000046 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
floorFix . . . . . . . . . . . .	Byte	 0000002A _DATA	
floor_pos  . . . . . . . . . . .	COORD	 00000052 _DATA	
floor  . . . . . . . . . . . . .	Byte	 00000000 _DATA	
gameOverMessage  . . . . . . . .	Byte	 000000F9 _DATA	
gravity  . . . . . . . . . . . .	Word	 000000CA _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
highscoreString  . . . . . . . .	Byte	 000000E6 _DATA	
highscore_pos  . . . . . . . . .	COORD	 0000004A _DATA	
highscore  . . . . . . . . . . .	DWord	 000000D4 _DATA	
keyState . . . . . . . . . . . .	DWord	 000000CC _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
main . . . . . . . . . . . . . .	Text   	 start@0
outputHandle . . . . . . . . . .	DWord	 0000003E _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
scoreString  . . . . . . . . . .	Byte	 000000D8 _DATA	
score_pos  . . . . . . . . . . .	COORD	 0000004E _DATA	
score  . . . . . . . . . . . . .	DWord	 000000D0 _DATA	
velocity . . . . . . . . . . . .	Word	 000000C8 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
xyBound  . . . . . . . . . . . .	COORD	 0000005A _DATA	
xyPosition . . . . . . . . . . .	COORD	 00000056 _DATA	
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
