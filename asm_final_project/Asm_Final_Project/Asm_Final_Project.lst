Microsoft (R) Macro Assembler Version 14.42.34435.0	    12/16/24 02:41:42
main.asm						     Page 1 - 1


				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				
 00000000			.data
 00000000 00000064		    floorLength DWORD 100
 00000004  00000064 [		    floor BYTE 100 DUP(0C4h)
	    C4
	   ]
 00000068 C4			    floorFix  BYTE 0C4h
 = 00000003			    BoxWidth  = 3
 = 00000003			    BoxHeight = 3
				
 00000069 DA			    boxTop    BYTE 0DAh, (BoxWidth - 2) DUP(0C4h), 0BFh
	   00000001 [
	    C4
	   ] BF
 0000006C B3			    boxBody   BYTE 0B3h, (BoxWidth - 2) DUP(' '), 0B3h
	   00000001 [
	    20
	   ] B3
 0000006F C0			    boxBottom BYTE 0C0h, (BoxWidth - 2) DUP(0C4h), 0D9h
	   00000001 [
	    C4
	   ] D9
				
 00000072 20 20 7C 20 00	    cactusTop    BYTE '  ', '|', ' ', 0    ; The top part of the cactus
 00000077 7C 5F 7C 5F 7C	    cactusMiddle BYTE '|', '_', '|', '_', '|', 0 ; The middle part of the cactus
	   00
 0000007D 7C 00			    cactusBottom  BYTE  '|', 0    ; The bottom part of the cactus
 0000007F 0025 000A		    cactus_pos    COORD <37, 10>           ; Cactus position
 00000083 00000003		    cactus_height DWORD 3                  ; Height of the cactus (3 lines)
				
 00000087 0005			    cactus_speed WORD 5 ; 仙人掌的速度
 00000089 00000000		    outputHandle DWORD 0
 0000008D 00000000		    bytesWritten DWORD 0
 00000091 00000000		    count DWORD 0
 00000095 0023 0000		    highscore_pos COORD <35,0>
 00000099 0037 0000		    score_pos COORD <55,0>
 0000009D 002F 0002		    gameOver_pos COORD <47,2>
 000000A1 002C 0004		    exit_pos COORD <44,4>
 000000A5 002A 0005		    restart_pos COORD <42,5>
 000000A9 0000 000C		    floor_pos COORD <0,12>
 000000AD 0003 000A		    xyPosition COORD <3,10> ; 起始位置
 000000B1 0050 0019		    xyBound COORD <80,25> ; 螢幕邊界
 000000B5 00000000		    cellsWritten DWORD ?
 000000B9  00000064 [		    attributes_floor WORD 100 DUP(0Fh)
	    000F
	   ]
				    ;attributes0 WORD BoxWidth DUP(0Ch)
 00000181  00000003 [		    attributes0 WORD BoxWidth DUP(0Ah)
	    000A
	   ]
 00000187  00000003 [		    attributes1 WORD BoxWidth DUP(0Ah)
	    000A
	   ]
 0000018D  00000003 [		    attributes2 WORD BoxWidth DUP(0Ah)
	    000A
	   ]
				    ;attributes1 WORD (BoxWidth-1) DUP(0Eh),0Ah
				    ;attributes2 WORD BoxWidth DUP(0Bh)
 00000193 0000			    velocity WORD 0  ; 速度，控制跳躍上升和下降
 00000195 0001			    gravity WORD 1   ; 重力，會讓速度每次減少 1
 00000197 00000000		    keyState DWORD 0
				
 0000019B  00000064 [		    redColor WORD 100 DUP(0Ch)  ; 0C表示紅色
	    000C
	   ]
				
 00000263 00000000		    score DWORD 0
 00000267 00000000		    highscore DWORD 0
 0000026B 53 63 6F 72 65	    scoreString BYTE "Score: 0000", 0
	   3A 20 30 30 30
	   30 00
 00000277 48 69 67 68 20	    highscoreString BYTE "High Score: 0000", 0
	   53 63 6F 72 65
	   3A 20 30 30 30
	   30 00
 00000288 47 61 6D 65 20	    gameOverMessage BYTE "Game Over!", 0
	   4F 76 65 72 21
	   00
 00000293 50 72 65 73 73	    restartMessage BYTE "Press Enter to restart", 0
	   20 45 6E 74 65
	   72 20 74 6F 20
	   72 65 73 74 61
	   72 74 00
 000002AA 50 72 65 73 73	    exitMessage BYTE "Press Esc to exit", 0
	   20 45 73 63 20
	   74 6F 20 65 78
	   69 74 00
				
 = start@0			main EQU start@0
				
 00000000			.code
				    SetConsoleOutputCP PROTO STDCALL :DWORD
				    GetAsyncKeyState PROTO STDCALL :DWORD
				    Sleep PROTO STDCALL :DWORD  ; 延遲函數
				
 00000000			main PROC
				    INVOKE SetConsoleOutputCP, 437
				
				    ; 取得控制台的輸出控制
				    INVOKE GetStdHandle, STD_OUTPUT_HANDLE
 00000011  A3 00000089 R	    mov outputHandle, eax
				
				    ; 畫出初始的方塊
 00000016  E8 000002E0		    call DrawBox
 0000001B  E8 000003E3		    call DrawCactus
				
				    ; 主迴圈
 00000020			mainLoop:
				    ; 加入延遲，避免移動速度過快
				    INVOKE Sleep, 75  ; 延遲 75 毫秒
				    
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes_floor, 1, floor_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR floorFix, 1, floor_pos, ADDR cellsWritten
				    
 00000061  FF 05 00000263 R	    inc score
 00000067  E8 0000053F		    call FormatScore
				    ;減回畫方塊所位移的2格
 0000006C  66| FF 0D		    dec xyPosition.y
	   000000AF R
 00000073  66| FF 0D		    dec xyPosition.y
	   000000AF R
 0000007A  E8 000004C5		    call DrawBackground
 0000007F  E8 00000018		    call CheckJumpKey
 00000084  B8 00000000		    mov eax, 0
				    ; 檢查是否碰撞到仙人掌
 00000089  E8 0000009A		    call CheckCollision
 0000008E  83 F8 01		    cmp eax, 1
 00000091  74 02		    je GameOver ; 如果碰撞到仙人掌，則遊戲結束
				    ; 如果沒有檢測到任何按鍵，則重新回到主迴圈
 00000093  EB 8B		    jmp mainLoop
				
 00000095			Gameover:
 00000095  E8 0000014A		    call GameOverMsg
 0000009A  EB 84		    jmp mainLoop
				  
				    
				
				; **檢測上鍵和空白鍵的跳躍**
 0000009C			CheckJumpKey PROC
				    ; 檢測上鍵 (VK_UP)
				    INVOKE GetAsyncKeyState, VK_UP
 000000A3  A9 00008000		    test eax, 8000h
 000000A8  75 0F		    jnz DoJump  ; 如果按下上鍵，執行跳躍
				
				    ; 檢測空白鍵 (VK_SPACE)
				    INVOKE GetAsyncKeyState, VK_SPACE
 000000B1  A9 00008000		    test eax, 8000h
 000000B6  75 01		    jnz DoJump  ; 如果按下空白鍵，執行跳躍
 000000B8  C3			    ret
				
 000000B9			DoJump:
 000000B9  E8 00000006		    call Jump
 000000BE  E8 000004DA		    call WaitForRelease ; 等待按鍵釋放，避免重複跳躍
 000000C3  C3			    ret
 000000C4			CheckJumpKey ENDP
				
				; **跳躍的動作 (獨立出一個子程式)**
				; **跳躍的動作，加入重力效果**
 000000C4			Jump PROC
				    ; 設定初始速度 (例如速度 6 可以測試跳得多高)
 000000C4  66| C7 05		    mov velocity, 6
	   00000193 R
	   0006
 000000CD  66| C7 05		    mov gravity, 2  ; 重力，每次更新速度時會減少
	   00000195 R
	   0002
				
 000000D6			JumpLoop:
				    ; 更新 Y 座標，模擬向上和向下運動
 000000D6  66| A1		    mov ax, velocity
	   00000193 R
 000000DC  66| 29 05		    sub xyPosition.y, ax  ; y = y - velocity
	   000000AF R
				    
				    ; 更新成下一時刻的畫面
 000000E3  E8 0000045C		    call DrawBackground
				    ;繼續增加score
 000000E8  FF 05 00000263 R	    inc score
 000000EE  E8 000004B8		    call FormatScore
				    
				    ; 模擬重力效果，速度會逐漸減少
 000000F3  66| A1		    mov ax, velocity      ; Load velocity into AX
	   00000193 R
 000000F9  66| 2B 05		    sub ax, gravity       ; Add gravity to velocity
	   00000195 R
 00000100  66| A3		    mov velocity, ax      ; Store updated velocity back to memory
	   00000193 R
				    
				    ; 檢查恐龍是否已經回到地面
 00000106  66| 83 3D		    cmp xyPosition.y, 10  ; 假設地面 y 座標為 10
	   000000AF R 0A
 0000010E  7D 09		    jge EndJump           ; 如果 y >= 10，則結束跳躍
				    
				    ; 延遲，讓動作不會太快
				    INVOKE Sleep, 100
 00000117  EB BD		    jmp JumpLoop  ; 繼續下一幀
				
 00000119			EndJump:
    ; 確保恐龍回到地面
 00000119  66| C7 05		    mov xyPosition.y, 10
	   000000AF R
	   000A
 00000122  E8 0000041D		    call DrawBackground
 00000127  C3			    ret
 00000128			Jump ENDP
				
 00000128			CheckCollision PROC
				    ; 檢查是否碰撞到仙人掌
 00000128  66| A1		    mov ax, cactus_pos.x          ; Get the cactus's x position
	   0000007F R
 0000012E  66| 8B 0D		    mov cx, xyPosition.x         ; Get the dinosaur's x position
	   000000AD R
 00000135  66| 2B C1		    sub ax, cx                    ; Calculate the horizontal distance between cactus and dinosaur
 00000138  66| 83 F8 03		    cmp ax, 3                     ; If the difference is 3 or more, no collision
 0000013C  7D 35		    jge NoCollision               ; Jump to NoCollision if no collision on x-axis
				
 0000013E  66| A1		    mov ax, cactus_pos.y          ; Get the cactus's y position
	   00000081 R
 00000144  66| 8B 0D		    mov cx, xyPosition.y         ; Get the dinosaur's y position
	   000000AF R
 0000014B  66| 2B C1		    sub ax, cx                    ; Calculate the vertical distance between cactus and dinosaur
 0000014E  66| 83 F8 03		    cmp ax, 3                     ; If the difference is 3 or more, no collision
 00000152  7D 1F		    jge NoCollision               ; Jump to NoCollision if no collision on y-axis
				
				    ; 如果發生碰撞，檢查分數是否高於 highScore
 00000154  A1 00000263 R	    mov eax, score                 ; Load current score into eax
 00000159  8B 1D 00000267 R	    mov ebx, highscore             ; Load high score into ebx
 0000015F  3B C3		    cmp eax, ebx                   ; Compare current score with high score
 00000161  7E 0A		    jle NoUpdateHighScore         ; Jump if current score is not greater than high score
				
				    ; 更新 high score
 00000163  A3 00000267 R	    mov highscore, eax             ; Update high score
				
				    ; 呼叫 FormatHighScore 來顯示更新後的 high score
 00000168  E8 00000464		    call FormatHighScore
				
 0000016D			NoUpdateHighScore:
				    ; 如果發生碰撞，返回 1，表示遊戲結束
 0000016D  B8 00000001		    mov eax, 1                    ; Set eax to 1 indicating collision happened
 00000172  C3			    ret
				
 00000173			NoCollision:
				    ; 如果沒有碰撞，返回 0
 00000173  B8 00000000		    mov eax, 0                    ; Set eax to 0 indicating no collision
 00000178  C3			    ret
 00000179			CheckCollision ENDP
				
				
				
				
				; **重置遊戲變數，讓遊戲重新開始**
 00000179			RestartGame PROC
				    ; 重置分數
 00000179  C7 05 00000263 R	    mov score, 0
	   00000000
 00000183  C6 05 00000272 R	    mov BYTE PTR [scoreString + 7], '0'
	   30
 0000018A  C6 05 00000273 R	    mov BYTE PTR [scoreString + 8], '0'
	   30
 00000191  C6 05 00000274 R	    mov BYTE PTR [scoreString + 9], '0'
	   30
 00000198  C6 05 00000275 R	    mov BYTE PTR [scoreString + 10], '0'
	   30
				    ; 重置恐龍的位置
 0000019F  66| C7 05		    mov xyPosition.x, 3     ; 起始位置 X
	   000000AD R
	   0003
 000001A8  66| C7 05		    mov xyPosition.y, 10    ; 恐龍位置 Y（在地面上）
	   000000AF R
	   000A
				
				    ; 重置仙人掌的位置
 000001B1  66| C7 05		    mov cactus_pos.x, 70    ; 仙人掌在螢幕右邊
	   0000007F R
	   0046
 000001BA  66| C7 05		    mov cactus_pos.y, 12    ; 仙人掌的地面高度
	   00000081 R
	   000C
				
				    ; 重置其他遊戲變數
 000001C3  66| C7 05		    mov velocity, 6         ; 停止恐龍的跳躍速度
	   00000193 R
	   0006
 000001CC  66| C7 05		    mov gravity, 2          ; 重力重置
	   00000195 R
	   0002
 000001D5  66| C7 05		    mov cactus_speed, 5     ; 仙人掌的速度
	   00000087 R
	   0005
				    
				    ; 重新繪製畫面
 000001DE  E8 00000361		    call DrawBackground
 000001E3  C3			    ret
 000001E4			RestartGame ENDP
				
				; **遊戲結束**
 000001E4			GameOverMsg PROC
				    ; 顯示 "Game Over!" 訊息
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR redColor, 10, gameOver_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR gameOverMessage, 10, gameOver_pos, ADDR cellsWritten
				    
				    ; 顯示 "Press Enter to restart" 和 "Press Esc to exit" 訊息
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes_floor, 40, restart_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR restartMessage, 23, restart_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes_floor, 40, exit_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR exitMessage, 23, exit_pos, ADDR cellsWritten
				    
				    ; 等待玩家按下 Enter 或 Esc 鍵
 00000292  E8 00000001		    call WaitForEnter
 00000297  C3			    ret
 00000298			GameOverMsg ENDP
				
 00000298			WaitForEnter PROC
				    ; 檢測是否按下 Enter 或 Esc 鍵
 00000298			WaitLoop:
				    INVOKE GetAsyncKeyState, VK_RETURN
 0000029F  A9 00008000		    test eax, 8000h        ; 檢查是否按下 Enter 鍵
 000002A4  0F 85 FFFFFECF	    jnz RestartGame        ; 如果按下 Enter，重啟遊戲
				
				    INVOKE GetAsyncKeyState, VK_ESCAPE
 000002B1  A9 00008000		    test eax, 8000h        ; 檢查是否按下 Esc 鍵
 000002B6  75 02		    jnz ExitGame           ; 如果按下 Esc，退出遊戲
				
 000002B8  EB DE		    jmp WaitLoop           ; 如果沒有按下任何鍵，繼續等待
 000002BA			WaitForEnter ENDP
				
				; **結束遊戲**
 000002BA			ExitGame PROC
				    ; 顯示退出訊息
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes_floor, 40, exit_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR exitMessage, 23, exit_pos, ADDR cellsWritten
				    ; 結束程式
				    INVOKE ExitProcess, 0
 000002FB			ExitGame ENDP
				
				; 繪製方塊
 000002FB			DrawBox PROC
				    ; 清除螢幕
				    ;call MoveCactus
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes_floor, floorLength, floor_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR floor, floorLength, floor_pos, ADDR cellsWritten
				    ; 上邊框
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes0, BoxWidth, xyPosition, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR boxTop, BoxWidth, xyPosition, ADDR cellsWritten
				
 00000377  66| FF 05		    inc xyPosition.y    ; 移動到下一行
	   000000AF R
				
				    ; 中間的內容
 0000037E  B9 00000001		    mov ecx, BoxHeight - 2
 00000383			L1: 
 00000383  51			    push ecx
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes1, BoxWidth, xyPosition, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR boxBody, BoxWidth, xyPosition, ADDR cellsWritten
 000003BE  66| FF 05		    inc xyPosition.y
	   000000AF R
 000003C5  59			    pop ecx
 000003C6  E2 BB		    loop L1
				
				    ; 下邊框
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes2, BoxWidth, xyPosition, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR boxBottom, BoxWidth, xyPosition, ADDR cellsWritten
				    ;INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes1, 1, cactus_pos, ADDR cellsWritten
				    ;INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR cactus, 1, cactus_pos, ADDR cellsWritten
 00000402  C3			    ret
 00000403			DrawBox ENDP
				
 00000403			DrawCactus PROC
				    ; Draw the cactus at its current position
				    ; Draw top part
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes1, 3, cactus_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR cactusTop, 3, cactus_pos, ADDR cellsWritten
				
				    ; Move down to the next line for middle part
 0000043D  66| FF 05		    inc cactus_pos.y
	   00000081 R
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes1, 6, cactus_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR cactusMiddle, 6, cactus_pos, ADDR cellsWritten
				
				    ; Move down to the next line for bottom part
 0000047E  66| FF 05		    inc cactus_pos.y
	   00000081 R
 00000485  66| FF 05		    inc cactus_pos.x
	   0000007F R
 0000048C  66| FF 05		    inc cactus_pos.x
	   0000007F R
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes1, 1, cactus_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR cactusBottom, 1, cactus_pos, ADDR cellsWritten
 000004CD  C3			    ret
 000004CE			DrawCactus ENDP
				
 000004CE			DrawScore PROC
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes_floor, 40, score_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR scoreString, 12, score_pos, ADDR cellsWritten
 00000508  C3			    ret
 00000509			DrawScore ENDP
				
 00000509			DrawHighScore PROC
				    INVOKE WriteConsoleOutputAttribute, outputHandle, ADDR attributes_floor, 40, highscore_pos, ADDR cellsWritten
				    INVOKE WriteConsoleOutputCharacter, outputHandle, ADDR highscoreString, 17, highscore_pos, ADDR cellsWritten
 00000543  C3			    ret
 00000544			DrawHighScore ENDP
				
				;繪製下一時刻的背景(移動仙人掌)
 00000544			DrawBackground PROC
 00000544  E8 00000000 E	    call Clrscr
 00000549  E8 FFFFFDAD		    call DrawBox
 0000054E  E8 0000000B		    call MoveCactus
 00000553  E8 FFFFFF76		    call DrawScore
 00000558  E8 FFFFFFAC		    call DrawHighScore
 0000055D  C3			    ret
 0000055E			DrawBackground ENDP
				
 0000055E			MoveCactus PROC
				    ; 移動仙人掌
 0000055E  66| A1		    mov ax, cactus_speed
	   00000087 R
 00000564  66| 29 05		    sub cactus_pos.x, ax
	   0000007F R
 0000056B  66| FF 0D		    dec cactus_pos.y
	   00000081 R
 00000572  66| FF 0D		    dec cactus_pos.y
	   00000081 R
 00000579  E8 FFFFFE85		    call DrawCactus
				    ; 如果仙人掌越過螢幕邊界，則重新生成
 0000057E  66| 83 3D		    cmp cactus_pos.x, 0
	   0000007F R 00
				
 00000586  7C 01		    jl resetCactus
 00000588  C3			    ret
				
 00000589			resetCactus:
 00000589  B8 00000014		    mov eax, 20
 0000058E  E8 00000000 E	    call RandomRange
 00000593  83 C0 32		    add eax, 50
 00000596  66| A3		    mov cactus_pos.x, ax ; 重新生成仙人掌
	   0000007F R
 0000059C  C3			    ret
 0000059D			MoveCactus ENDP
				
				; 等待按鍵釋放
 0000059D			WaitForRelease PROC
				    ; ecx = 虛擬鍵的代碼
 0000059D			WaitLoop:
				    INVOKE GetAsyncKeyState, ecx
 000005A3  A9 00008000		    test eax, 8000h
 000005A8  75 F3		    jnz WaitLoop ; 如果還在按著按鍵，繼續等待
 000005AA  C3			    ret
 000005AB			WaitForRelease ENDP
				
 000005AB			FormatScore PROC
 000005AB  A1 00000263 R	    mov eax, score
 000005B0  B9 0000000A		    mov ecx, 10
 000005B5  BF 00000276 R	    mov edi, OFFSET scoreString + 11
 000005BA  C6 07 00		    mov BYTE PTR [edi], 0
 000005BD  BA 00000000		    mov edx, 0
 000005C2			    L1:
 000005C2  33 D2		    xor edx, edx
 000005C4  F7 F1		        div ecx
 000005C6  80 C2 30		        add dl, '0'
 000005C9  4F			        dec edi
 000005CA  88 17		        mov BYTE PTR [edi], dl
 000005CC  85 C0		        test eax, eax
 000005CE  75 F2		        jnz L1
 000005D0  C3			    ret
 000005D1			FormatScore ENDP
				
 000005D1			FormatHighScore PROC
 000005D1  A1 00000267 R	    mov eax, highscore
 000005D6  B9 0000000A		    mov ecx, 10
 000005DB  BF 00000287 R	    mov edi, OFFSET highscoreString + 16
 000005E0  C6 07 00		    mov BYTE PTR [edi], 0
 000005E3  BA 00000000		    mov edx, 0
 000005E8			    L1:
 000005E8  33 D2		    xor edx, edx
 000005EA  F7 F1		        div ecx
 000005EC  80 C2 30		        add dl, '0'
 000005EF  4F			        dec edi
 000005F0  88 17		        mov BYTE PTR [edi], dl
 000005F2  85 C0		        test eax, eax
 000005F4  75 F2		        jnz L1
 000005F6  C3			    ret
 000005F7			FormatHighScore ENDP
				
 000005F7main ENDP
				END main
Microsoft (R) Macro Assembler Version 14.42.34435.0	    12/16/24 02:41:42
main.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000002BC Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000005F7 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CheckCollision . . . . . . . . .	P Near	 00000128 _TEXT	Length= 00000051 Public STDCALL
  NoUpdateHighScore  . . . . . .	L Near	 0000016D _TEXT	
  NoCollision  . . . . . . . . .	L Near	 00000173 _TEXT	
CheckJumpKey . . . . . . . . . .	P Near	 0000009C _TEXT	Length= 00000028 Public STDCALL
  DoJump . . . . . . . . . . . .	L Near	 000000B9 _TEXT	
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DrawBackground . . . . . . . . .	P Near	 00000544 _TEXT	Length= 0000001A Public STDCALL
DrawBox  . . . . . . . . . . . .	P Near	 000002FB _TEXT	Length= 00000108 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 00000383 _TEXT	
DrawCactus . . . . . . . . . . .	P Near	 00000403 _TEXT	Length= 000000CB Public STDCALL
DrawHighScore  . . . . . . . . .	P Near	 00000509 _TEXT	Length= 0000003B Public STDCALL
DrawScore  . . . . . . . . . . .	P Near	 000004CE _TEXT	Length= 0000003B Public STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitGame . . . . . . . . . . . .	P Near	 000002BA _TEXT	Length= 00000041 Public STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatHighScore  . . . . . . . .	P Near	 000005D1 _TEXT	Length= 00000026 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 000005E8 _TEXT	
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatScore  . . . . . . . . . .	P Near	 000005AB _TEXT	Length= 00000026 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 000005C2 _TEXT	
GameOverMsg  . . . . . . . . . .	P Near	 000001E4 _TEXT	Length= 000000B4 Public STDCALL
GetAsyncKeyState . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Jump . . . . . . . . . . . . . .	P Near	 000000C4 _TEXT	Length= 00000064 Public STDCALL
  JumpLoop . . . . . . . . . . .	L Near	 000000D6 _TEXT	
  EndJump  . . . . . . . . . . .	L Near	 00000119 _TEXT	
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MoveCactus . . . . . . . . . . .	P Near	 0000055E _TEXT	Length= 0000003F Public STDCALL
  resetCactus  . . . . . . . . .	L Near	 00000589 _TEXT	
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RestartGame  . . . . . . . . . .	P Near	 00000179 _TEXT	Length= 0000006B Public STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleOutputCP . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitForEnter . . . . . . . . . .	P Near	 00000298 _TEXT	Length= 00000022 Public STDCALL
  WaitLoop . . . . . . . . . . .	L Near	 00000298 _TEXT	
WaitForRelease . . . . . . . . .	P Near	 0000059D _TEXT	Length= 0000000E Public STDCALL
  WaitLoop . . . . . . . . . . .	L Near	 0000059D _TEXT	
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
start@0  . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000005F7 Public STDCALL
  mainLoop . . . . . . . . . . .	L Near	 00000020 _TEXT	
  Gameover . . . . . . . . . . .	L Near	 00000095 _TEXT	
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
BoxHeight  . . . . . . . . . . .	Number	 00000003h   
BoxWidth . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
attributes0  . . . . . . . . . .	Word	 00000181 _DATA	
attributes1  . . . . . . . . . .	Word	 00000187 _DATA	
attributes2  . . . . . . . . . .	Word	 0000018D _DATA	
attributes_floor . . . . . . . .	Word	 000000B9 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
boxBody  . . . . . . . . . . . .	Byte	 0000006C _DATA	
boxBottom  . . . . . . . . . . .	Byte	 0000006F _DATA	
boxTop . . . . . . . . . . . . .	Byte	 00000069 _DATA	
brown  . . . . . . . . . . . . .	Number	 00000006h   
bytesWritten . . . . . . . . . .	DWord	 0000008D _DATA	
cactusBottom . . . . . . . . . .	Byte	 0000007D _DATA	
cactusMiddle . . . . . . . . . .	Byte	 00000077 _DATA	
cactusTop  . . . . . . . . . . .	Byte	 00000072 _DATA	
cactus_height  . . . . . . . . .	DWord	 00000083 _DATA	
cactus_pos . . . . . . . . . . .	COORD	 0000007F _DATA	
cactus_speed . . . . . . . . . .	Word	 00000087 _DATA	
cellsWritten . . . . . . . . . .	DWord	 000000B5 _DATA	
count  . . . . . . . . . . . . .	DWord	 00000091 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exitMessage  . . . . . . . . . .	Byte	 000002AA _DATA	
exit_pos . . . . . . . . . . . .	COORD	 000000A1 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
floorFix . . . . . . . . . . . .	Byte	 00000068 _DATA	
floorLength  . . . . . . . . . .	DWord	 00000000 _DATA	
floor_pos  . . . . . . . . . . .	COORD	 000000A9 _DATA	
floor  . . . . . . . . . . . . .	Byte	 00000004 _DATA	
gameOverMessage  . . . . . . . .	Byte	 00000288 _DATA	
gameOver_pos . . . . . . . . . .	COORD	 0000009D _DATA	
gravity  . . . . . . . . . . . .	Word	 00000195 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
highscoreString  . . . . . . . .	Byte	 00000277 _DATA	
highscore_pos  . . . . . . . . .	COORD	 00000095 _DATA	
highscore  . . . . . . . . . . .	DWord	 00000267 _DATA	
keyState . . . . . . . . . . . .	DWord	 00000197 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
main . . . . . . . . . . . . . .	Text   	 start@0
outputHandle . . . . . . . . . .	DWord	 00000089 _DATA	
redColor . . . . . . . . . . . .	Word	 0000019B _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
restartMessage . . . . . . . . .	Byte	 00000293 _DATA	
restart_pos  . . . . . . . . . .	COORD	 000000A5 _DATA	
scoreString  . . . . . . . . . .	Byte	 0000026B _DATA	
score_pos  . . . . . . . . . . .	COORD	 00000099 _DATA	
score  . . . . . . . . . . . . .	DWord	 00000263 _DATA	
velocity . . . . . . . . . . . .	Word	 00000193 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
xyBound  . . . . . . . . . . . .	COORD	 000000B1 _DATA	
xyPosition . . . . . . . . . . .	COORD	 000000AD _DATA	
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
